{"version":3,"sources":["components/Header.js","components/Banner.js","components/SearchBar.js","components/Results.js","components/Nominations.js","components/Footer.js","App.js","index.js"],"names":["Header","className","Banner","arr","status","Math","floor","random","length","SearchBar","debouncer","htmlFor","type","name","onChange","placeholder","Results","searchTerm","searchResults","addNomination","disabled","resultsList","map","result","key","id","title","year","country","genre","nominated","onClick","Nominations","nominations","removeNomination","nomCount","nomsList","nom","Footer","href","target","searchUrl","idDetailsUrl","App","state","loading","finished","timer","input","e","clearTimeout","value","setTimeout","search","movieTitle","axios","get","then","response","results","data","Search","reduce","acc","movieObj","movieMatch","imdbID","push","setState","Promise","all","matches","filter","Genre","includes","alreadyNominated","findIndex","movie","Title","Year","Country","catch","error","console","log","index","updatedNominations","localStorage","setItem","JSON","stringify","savedNoms","getItem","parse","this","_prevProps","prevState","allNoms","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.143ff28d.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <h1 className=\"header__title\">Shoppies</h1>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst Banner = ({ status }) => {\n  const randomMovies = [\n    \"Tropic Thunder\",\n    \"Clue\",\n    \"A Bug's Life\",\n    \"Little Miss Sunshine\",\n    \"Ordinary People\",\n    \"This Is Spinal Tap\",\n    \"Raging Bull\",\n    \"Shawshank Redemption\",\n    \"Dumb and Dumber\",\n    \"Saturday Night Fever\",\n    \"Monty Python and the Holy Grail\",\n  ];\n\n  // add a check for matching nominations\n  const randomIndex = (arr) => {\n    const index = Math.floor(Math.random() * arr.length);\n    return arr[index];\n  };\n\n  if (!status) {\n    return null;\n  } else {\n    return (\n      <section className=\"banner\">\n        <h3 className=\"banner__heading\">Nominations complete!</h3>\n        <p className=\"banner__text\">\n          Thank you for your selections. You may still make changes before\n          finalizing your decision.\n        </p>\n        <span className=\"banner__span\">\n          Are you sure{\" \"}\n          <span className=\"banner__text banner__text--movie\">\n            '{randomIndex(randomMovies)}'\n          </span>{\" \"}\n          isn't one of your favourite movies?\n        </span>\n      </section>\n    );\n  }\n};\n\nexport default Banner;\n","import React from \"react\";\n\nconst SearchBar = ({ debouncer }) => {\n  return (\n    <section className=\"search\">\n      <label htmlFor=\"search\" className=\"search__label\">\n        Movie Title\n      </label>\n      <input\n        type=\"search\"\n        className=\"search__input\"\n        name=\"search\"\n        onChange={debouncer()}\n        placeholder=\"Search...\"\n      />\n    </section>\n  );\n};\n\nexport default SearchBar;\n","import React from \"react\";\n\nconst Results = ({ searchTerm, searchResults, addNomination, disabled }) => {\n  const resultsList = searchResults.map((result) => {\n    if (!result) {\n      return (\n        <div className=\"results__result\">\n          <p className=\"results__text\">Loading...</p>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"results__result\" key={result.id}>\n          <div className=\"results__text-container\">\n            <p className=\"results__text\">\n              {result.title}{\" \"}\n              <span className=\"results__text--year\">({result.year})</span>\n            </p>\n            <p className=\"results__text results__text--sub\">\n              Country: {result.country}\n            </p>\n            <p className=\"results__text results__text--sub\">\n              Genre: {result.genre}\n            </p>\n          </div>\n          {result.nominated ? (\n            <button className=\"results__button results__button--nominated\">\n              Nominated!\n            </button>\n          ) : (\n            <button\n              className=\"results__button\"\n              onClick={() => addNomination(result)}\n              disabled={disabled}\n            >\n              + Add Movie\n            </button>\n          )}\n        </div>\n      );\n    }\n  });\n\n  return (\n    <section className=\"results\">\n      {searchResults.length < 1 ? (\n        <>\n          <div className=\"results__header-bar\">\n            <h3 className=\"results__heading\">Results</h3>\n          </div>\n          <div className=\"results__no-matches-container\">\n            <p className=\"results__text\">No matches</p>\n          </div>\n        </>\n      ) : (\n        <div className=\"results__header-bar\">\n          <h3 className=\"results__heading\">\n            Results for{\" \"}\n            <span className=\"results__text results__text--search\">\n              \"{searchTerm}\"...\n            </span>\n          </h3>\n        </div>\n      )}\n      {resultsList}\n    </section>\n  );\n};\n\nexport default Results;\n","import React from \"react\";\n\nconst Nominations = ({ nominations, removeNomination, nomCount }) => {\n  const nomsList = nominations.map((nom) => {\n    return (\n      <div className=\"nominations__nom\" key={nom.id}>\n        <div className=\"nominations__text-container\">\n          <p className=\"nominations__text\">\n            {nom.title}{\" \"}\n            <span className=\"nominations__text--year\">({nom.year})</span>\n          </p>\n        </div>\n        {nom.nominated ? (\n          <button\n            className=\"nominations__button\"\n            onClick={() => removeNomination(nom)}\n          >\n            - Remove Movie\n          </button>\n        ) : null}\n      </div>\n    );\n  });\n\n  return (\n    <section className=\"nominations\">\n      <div className=\"nominations__header-bar\">\n        <h3 className=\"nominations__heading\">Nominations</h3>\n        <p className=\"nominations__countdown\">\n          <span className=\"nominations__countdown nominations__countdown--accent\">\n            {nomCount}\n          </span>{\" \"}\n          {nomCount === 1 ? \"nomination\" : \"nominations\"} left\n        </p>\n      </div>\n      {nominations.length < 1 ? (\n        <div className=\"nominations__no-noms-container\">\n          <div className=\"nominations__text-container\">\n            <p className=\"nominations__text\">\n              No nominations yet. Search for your favourite movie to get\n              started!\n            </p>\n          </div>\n        </div>\n      ) : (\n        nomsList\n      )}\n    </section>\n  );\n};\n\nexport default Nominations;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <div className=\"footer__left-container\">\n        <p className=\"footer__text\">\n          Application by <br className=\"footer__break\" />\n          <span className=\"footer__text--emph\">Jess Hilliam</span>\n          <br />\n          for Shopify Internship Winter 2021\n        </p>\n        <div className=\"footer__contact-links\">\n          <a\n            href=\"https://github.com/pupocalypse/shopify_challenge_shoppies\"\n            className=\"footer__link\"\n            target=\"_blank\"\n          >\n            <p className=\"footer__text\">GitHub</p>\n          </a>{\" \"}\n          |{\" \"}\n          <a\n            href=\"https://www.linkedin.com/in/jess-hilliam/\"\n            className=\"footer__link\"\n            target=\"_blank\"\n          >\n            <p className=\"footer__text\">LinkedIn</p>\n          </a>\n        </div>\n      </div>\n      <div className=\"footer__right-container\">\n        <p className=\"footer__text\">\n          <span className=\"footer__text--emph\">Jess' Nominations:</span>\n          <br />\n          Ace Ventura: When Nature Calls, A Knight's Tale, Little Miss Sunshine,\n          Up, Zoolander\n        </p>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport axios from \"axios\";\n\nimport Header from \"./components/Header\";\nimport Banner from \"./components/Banner\";\nimport SearchBar from \"./components/SearchBar\";\nimport Results from \"./components/Results\";\nimport Nominations from \"./components/Nominations\";\nimport Footer from \"./components/Footer\";\n\nimport \"./styles/app.css\";\n\nconst apiKey = \"a3d02416\";\nconst searchUrl = `http://www.omdbapi.com/?apikey=${apiKey}&s=`;\nconst idDetailsUrl = `http://www.omdbapi.com?apikey=${apiKey}&i=`;\n\nclass App extends React.Component {\n  state = {\n    searchTerm: null,\n    searchResults: [],\n    nominations: [],\n    loading: false,\n    finished: false,\n  };\n\n  componentDidMount() {\n    const savedNoms = localStorage.getItem(\"nominations\");\n    const nominations = JSON.parse(savedNoms);\n    if (nominations && nominations.length > 0) {\n      this.setState({\n        nominations,\n      });\n    }\n  }\n\n  componentDidUpdate(_prevProps, prevState) {\n    // once this.state.nominations has five movies, render Banner component\n    // change state to finished: true\n    if (\n      prevState.nominations.length !== 5 &&\n      this.state.nominations.length === 5\n    ) {\n      this.setState({\n        finished: true,\n      });\n    }\n    // set localStorage is nominations has changed\n    let allNoms = this.state.nominations;\n    localStorage.setItem(\"nominations\", JSON.stringify(allNoms));\n  }\n\n  // trying something new - reduce load on rapid onChange input\n  debouncer = () => {\n    let timer;\n    let input;\n    return (e) => {\n      if (timer) {\n        clearTimeout(timer);\n      }\n      input = e.target.value;\n      timer = setTimeout(() => {\n        this.search(input);\n        timer = null;\n      }, 1000);\n    };\n  };\n\n  search = (e) => {\n    const movieTitle = e;\n    if (!movieTitle) {\n      this.setState({\n        searchTerm: \"\",\n        searchResults: [],\n        loading: false,\n      });\n    } else {\n      axios\n        .get(`${searchUrl}${movieTitle}&type=movie`)\n        .then((response) => {\n          let results;\n          if (response.data.Search) {\n            results = response.data.Search.reduce((acc, movieObj) => {\n              let movieMatch = axios.get(`${idDetailsUrl}${movieObj.imdbID}`);\n\n              acc.push(movieMatch);\n              return acc;\n            }, []);\n          }\n          this.setState({\n            loading: true,\n            searchTerm: movieTitle,\n          });\n          return Promise.all(results);\n        })\n        .then((results) => {\n          const matches = results\n            .filter(\n              (result) =>\n                result.data.Genre.includes(\"Short\") === false &&\n                result.data.Genre !== \"X\"\n            )\n            .map((result) => {\n              const nominations = this.state.nominations;\n              const alreadyNominated = nominations.findIndex(\n                (nom) => nom.id === result.data.imdbID\n              );\n              let movie = {\n                id: result.data.imdbID,\n                title: result.data.Title,\n                year: result.data.Year,\n                country: result.data.Country,\n                genre: result.data.Genre,\n                nominated: false,\n              };\n              if (alreadyNominated !== -1) {\n                movie.nominated = true;\n              }\n              return movie;\n            });\n          this.setState({\n            loading: false,\n            searchResults: matches,\n          });\n        })\n        .catch((error) => console.log(error));\n    }\n  };\n\n  addNomination = (movieObj) => {\n    // onClick event, passed to Results\n    // receives result object\n    // pushes nomination to setState\n    // deactive 'add' button in Results list for that title\n    if (this.state.nominations.length !== 5) {\n      movieObj.nominated = true;\n      this.setState({\n        nominations: [...this.state.nominations, movieObj],\n      });\n    }\n  };\n\n  removeNomination = (movieObj) => {\n    // onClick event, passed to Nominations\n    // receives nomination object\n    // pops nomination from setState\n    // IF same title is displayed in Results, reactivate the 'add' button\n    movieObj.nominated = false;\n    let searchResults = this.state.searchResults;\n    const index = searchResults.findIndex(\n      (movie) => movie.title === movieObj.title\n    );\n    if (index !== -1) {\n      searchResults[index].nominated = false;\n    }\n    let updatedNominations = this.state.nominations.filter(\n      (nom) => nom.title !== movieObj.title\n    );\n    if (updatedNominations.length === 0) {\n      updatedNominations = [];\n    }\n    this.setState({\n      searchResults: searchResults,\n      nominations: updatedNominations,\n    });\n    localStorage.setItem(\"nominations\", JSON.stringify(updatedNominations));\n  };\n\n  render() {\n    const nomCount = 5 - this.state.nominations.length;\n\n    return (\n      <>\n        <Header />\n        <main className=\"app\">\n          <Banner\n            status={this.state.finished}\n            nominations={this.state.nominations}\n          />\n          <SearchBar search={this.search} debouncer={this.debouncer} />\n          <Results\n            searchTerm={this.state.searchTerm}\n            searchResults={this.state.searchResults}\n            addNomination={this.addNomination}\n            disabled={this.state.nominations.length >= 5}\n            loading={this.state.loading}\n          />\n          <Nominations\n            nominations={this.state.nominations}\n            removeNomination={this.removeNomination}\n            nomCount={nomCount}\n          />\n        </main>\n        <Footer />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}