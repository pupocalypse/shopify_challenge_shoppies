{"version":3,"sources":["components/Header.js","components/Banner.js","components/elements/Loader.js","components/SearchBar.js","components/elements/Button.js","components/ResultCard.js","components/Results.js","components/NominationCard.js","components/Nominations.js","components/Footer.js","components/elements/ScrollToTopButton.js","App.js","index.js"],"names":["Header","className","Banner","finished","randomMovie","nominations","Loader","SearchBar","debouncer","loading","htmlFor","type","name","onChange","placeholder","Button","clickHandler","disabled","children","onClick","ResultCard","result","addNomination","key","id","title","year","country","genre","nominated","Results","searchTerm","searchResults","noResults","resultsList","map","length","NominationCard","nomination","removeNomination","Nominations","nomCount","nomsList","nom","Footer","href","target","rel","ScrollToTopButton","scrollToTop","searchUrl","process","idDetailsUrl","randomMovies","App","rootElement","document","documentElement","useState","setSearchTerm","setSearchResults","setNominations","setLoading","setFinished","setRandomMovie","randomIndex","useCallback","movies","filter","movie","some","Math","floor","random","scrollTo","top","behavior","useEffect","savedNoms","JSON","parse","localStorage","getItem","setItem","stringify","search","movieTitle","axios","get","then","response","results","data","Search","reduce","acc","movieObj","movieMatch","imdbID","push","Promise","all","matches","Genre","includes","alreadyNominated","findIndex","Title","Year","Country","catch","finally","setTimeout","timer","input","e","clearTimeout","value","index","updatedNominations","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e25f3845.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <h1 className=\"header__title\">Shoppies</h1>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst Banner = ({ finished, nominations, randomMovie }) => {\n  // const randomMovies = [\n  //   \"Tropic Thunder\",\n  //   \"Clue\",\n  //   \"A Bug's Life\",\n  //   \"Little Miss Sunshine\",\n  //   \"Ordinary People\",\n  //   \"This Is Spinal Tap\",\n  //   \"Raging Bull\",\n  //   \"Shawshank Redemption\",\n  //   \"Dumb and Dumber\",\n  //   \"Saturday Night Fever\",\n  //   \"Monty Python and the Holy Grail\",\n  // ];\n\n  // // add a check for matching nominations\n  // const randomIndex = (arr) => {\n  //   const index = Math.floor(Math.random() * arr.length);\n  //   nominations.forEach((nom) => {\n  //     if (arr[index] === nom.title) {\n  //       return randomIndex(arr);\n  //     }\n  //   });\n  //   return arr[index];\n  // };\n\n  if (!finished) {\n    return null;\n  } else {\n    return (\n      <section className=\"banner\">\n        <h3 className=\"banner__heading\">Nominations complete!</h3>\n        <p className=\"banner__text\">\n          Thank you for your selections. You may still make changes before\n          finalizing your decision.\n        </p>\n        <span className=\"banner__span\">\n          Are you sure{\" \"}\n          <span className=\"banner__text banner__text--movie\">\n            {/* '{randomIndex(randomMovies)}' */}\n            {randomMovie}\n          </span>{\" \"}\n          isn't one of your favourite movies?\n        </span>\n      </section>\n    );\n  }\n};\n\nexport default Banner;\n","import React from \"react\";\n\nconst Loader = () => {\n  return (\n    <div className=\"loader\">\n      <div className=\"loader__orb\"></div>\n      <div className=\"loader__orb\"></div>\n      <div className=\"loader__orb\"></div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\nimport Loader from \"./elements/Loader\";\n\nconst SearchBar = ({ debouncer, loading }) => {\n  return (\n    <section className=\"search\">\n      <label htmlFor=\"search\" className=\"search__label\">\n        Movie Title\n        <input\n          type=\"search\"\n          className=\"search__input\"\n          name=\"search\"\n          onChange={debouncer()}\n          placeholder=\"Search...\"\n        />\n        {loading ? (\n          <div className=\"search__loader\">\n            <Loader />\n          </div>\n        ) : null}\n      </label>\n    </section>\n  );\n};\n\nexport default SearchBar;\n","import React from \"react\";\n\nconst Button = ({\n  className,\n  clickHandler = () => {},\n  disabled = false,\n  children,\n}) => {\n  return (\n    <button className={className} onClick={clickHandler} disabled={disabled}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport Button from \"./elements/Button\";\n\nconst ResultCard = ({ result, addNomination, disabled }) => {\n  return (\n    <div className=\"results__result\" key={result.id}>\n      <div className=\"results__text-container\">\n        <p className=\"results__text\">\n          {result.title}{\" \"}\n          <span className=\"results__text--year\">({result.year})</span>\n        </p>\n        <p className=\"results__text results__text--sub\">\n          Country: {result.country}\n        </p>\n        <p className=\"results__text results__text--sub\">\n          Genre: {result.genre}\n        </p>\n      </div>\n      {result.nominated ? (\n        <Button className=\"results__button results__button--nominated\">\n          Nominated!\n        </Button>\n      ) : (\n        <Button\n          className=\"results__button\"\n          clickHandler={() => addNomination(result)}\n          disabled={disabled}\n        >\n          + Add Movie\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default ResultCard;\n","import React from \"react\";\nimport ResultCard from \"./ResultCard\";\n// import Button from \"./elements/Button\";\n\nconst Results = ({\n  searchTerm,\n  searchResults,\n  addNomination,\n  noResults,\n  disabled,\n}) => {\n  const resultsList = searchResults.map((result) => {\n    if (!result) {\n      return (\n        <div className=\"results__result\">\n          <p className=\"results__text\">Loading...</p>\n        </div>\n      );\n    } else {\n      return (\n        <ResultCard\n          result={result}\n          addNomination={addNomination}\n          disabled={disabled}\n        />\n      );\n    }\n  });\n\n  return (\n    <section className=\"results\">\n      {searchResults.length < 1 ? (\n        <>\n          <div className=\"results__header-bar\">\n            <h3 className=\"results__heading\">Results</h3>\n          </div>\n          <div className=\"results__no-matches-container\">\n            <p className=\"results__text\">\n              {noResults ? \"No matches\" : \"Search for a movie\"}\n            </p>\n          </div>\n        </>\n      ) : (\n        <div className=\"results__header-bar\">\n          <h3 className=\"results__heading\">\n            Results for{\" \"}\n            <span className=\"results__text results__text--search\">\n              \"{searchTerm}\"...\n            </span>\n          </h3>\n        </div>\n      )}\n      {resultsList}\n    </section>\n  );\n};\n\nexport default Results;\n","import React from \"react\";\nimport Button from \"./elements/Button\";\n\nconst NominationCard = ({ nomination, removeNomination }) => {\n  return (\n    <div className=\"nominations__nom\" key={nomination.id}>\n      <div className=\"nominations__text-container\">\n        <p className=\"nominations__text\">\n          {nomination.title}{\" \"}\n          <span className=\"nominations__text--year\">({nomination.year})</span>\n        </p>\n      </div>\n      <Button\n        className=\"nominations__button\"\n        clickHandler={() => removeNomination(nomination)}\n      >\n        - Remove Movie\n      </Button>\n    </div>\n  );\n};\n\nexport default NominationCard;\n","import React from \"react\";\nimport NominationCard from \"./NominationCard\";\n\nconst Nominations = ({ nominations, removeNomination, nomCount }) => {\n  const nomsList = nominations.map((nom) => {\n    return (\n      <NominationCard nomination={nom} removeNomination={removeNomination} />\n    );\n  });\n\n  return (\n    <section className=\"nominations\">\n      <div className=\"nominations__header-bar\">\n        <h3 className=\"nominations__heading\">Nominations</h3>\n        <p className=\"nominations__countdown\">\n          <span className=\"nominations__countdown nominations__countdown--accent\">\n            {nomCount}\n          </span>{\" \"}\n          {nomCount === 1 ? \"nomination\" : \"nominations\"} left\n        </p>\n      </div>\n      {nominations.length < 1 ? (\n        <div className=\"nominations__no-noms-container\">\n          <p className=\"nominations__text\">\n            No nominations yet. Search for your favourite movie to get started!\n          </p>\n        </div>\n      ) : (\n        nomsList\n      )}\n    </section>\n  );\n};\n\nexport default Nominations;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <div className=\"footer__left-container\">\n        <p className=\"footer__text\">\n          Application by <br className=\"footer__break\" />\n          <span className=\"footer__text--emph\">Jess Hilliam</span>\n          <br />\n          for Shopify Internship Winter 2021\n        </p>\n        <div className=\"footer__contact-links\">\n          <a\n            href=\"https://github.com/pupocalypse/shopify_challenge_shoppies\"\n            className=\"footer__link\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <p className=\"footer__text\">GitHub</p>\n          </a>{\" \"}\n          |{\" \"}\n          <a\n            href=\"https://www.linkedin.com/in/jess-hilliam/\"\n            className=\"footer__link\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <p className=\"footer__text\">LinkedIn</p>\n          </a>\n        </div>\n      </div>\n      <div className=\"footer__right-container\">\n        <p className=\"footer__text\">\n          <span className=\"footer__text--emph\">Jess' Nominations:</span>\n          <br />\n          Ace Ventura: When Nature Calls, A Knight's Tale, Little Miss Sunshine,\n          Up, Zoolander\n        </p>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n\nconst ScrollToTopButton = ({ scrollToTop }) => {\n  return (\n    <button className=\"scroll-button\" onClick={scrollToTop}>\n      <i className=\"fas fa-angle-up\"></i>\n    </button>\n  );\n};\n\nexport default ScrollToTopButton;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\n\nimport Header from \"./components/Header\";\nimport Banner from \"./components/Banner\";\nimport SearchBar from \"./components/SearchBar\";\nimport Results from \"./components/Results\";\nimport Nominations from \"./components/Nominations\";\nimport Footer from \"./components/Footer\";\n\nimport ScrollToTopButton from \"./components/elements/ScrollToTopButton\";\n\nimport \"./styles/app.css\";\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\nconst searchUrl = `https://www.omdbapi.com/?apikey=${API_KEY}&s=`;\nconst idDetailsUrl = `https://www.omdbapi.com?apikey=${API_KEY}&i=`;\n\nconst randomMovies = [\n  \"Tropic Thunder\",\n  \"Clue\",\n  \"A Bug's Life\",\n  \"Little Miss Sunshine\",\n  \"Ordinary People\",\n  \"This Is Spinal Tap\",\n  \"Raging Bull\",\n  \"Shawshank Redemption\",\n  \"Dumb and Dumber\",\n  \"Saturday Night Fever\",\n  \"Monty Python and the Holy Grail\",\n];\n\nconst App = () => {\n  const rootElement = document.documentElement;\n\n  const [searchTerm, setSearchTerm] = useState(null);\n  const [searchResults, setSearchResults] = useState([]);\n  const [nominations, setNominations] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [finished, setFinished] = useState(false);\n  const [randomMovie, setRandomMovie] = useState(null);\n\n  const randomIndex = useCallback(() => {\n    const movies = randomMovies.filter(\n      (movie) => !nominations.some((nom) => nom.title === movie)\n    );\n\n    const index = Math.floor(Math.random() * movies.length);\n    return movies[index];\n  }, [nominations]);\n\n  const scrollToTop = useCallback(() => {\n    rootElement.scrollTo({\n      top: 0,\n      behavior: \"smooth\",\n    });\n  }, [rootElement]);\n\n  useEffect(() => {\n    if (nominations.length === 0) {\n      const savedNoms = JSON.parse(localStorage.getItem(\"nominations\"));\n      if (savedNoms?.length > 0) {\n        setNominations(savedNoms);\n      }\n    }\n\n    if (nominations.length === 5) {\n      setRandomMovie(randomIndex());\n      setFinished(true);\n      scrollToTop();\n    } else {\n      setFinished(false);\n    }\n\n    localStorage.setItem(\"nominations\", JSON.stringify(nominations));\n  }, [nominations, scrollToTop, randomMovie, randomIndex]);\n\n  // reduce load on rapid onChange input\n  const debouncer = () => {\n    let timer;\n    let input;\n    return (e) => {\n      if (timer) {\n        clearTimeout(timer);\n      }\n      setLoading(true);\n      input = e.target.value;\n      timer = setTimeout(() => {\n        search(input);\n        timer = null;\n      }, 1000);\n    };\n  };\n\n  const search = (movieTitle) => {\n    if (!movieTitle) {\n      setSearchTerm(null);\n      setSearchResults([]);\n      setLoading(false);\n    } else {\n      setSearchTerm(movieTitle);\n      axios\n        .get(`${searchUrl}${movieTitle}&type=movie`)\n        .then((response) => {\n          let results;\n          if (response.data.Search) {\n            results = response.data.Search.reduce((acc, movieObj) => {\n              let movieMatch = axios.get(`${idDetailsUrl}${movieObj.imdbID}`);\n\n              acc.push(movieMatch);\n              return acc;\n            }, []);\n          }\n          return Promise.all(results);\n        })\n        .then((results) => {\n          const matches = results\n            .filter(\n              (result) =>\n                result.data.Genre.includes(\"Short\") === false &&\n                result.data.Genre !== \"X\"\n              // this API includes some naughty results =\\\n            )\n            .map((result) => {\n              const alreadyNominated = nominations.findIndex(\n                (nom) => nom.id === result.data.imdbID\n              );\n              let movie = {\n                id: result.data.imdbID,\n                title: result.data.Title,\n                year: result.data.Year,\n                country: result.data.Country,\n                genre: result.data.Genre,\n                nominated: false,\n              };\n              if (alreadyNominated !== -1) {\n                movie.nominated = true;\n              }\n              return movie;\n            });\n          setSearchResults(matches);\n        })\n        .catch(() => {\n          // no results found from searchTerm\n          setSearchResults([]);\n        })\n        .finally(() => {\n          setTimeout(() => {\n            setLoading(false);\n          }, 500);\n        });\n    }\n  };\n\n  // onClick event, passed to Results\n  // receives result object\n  // pushes nomination to state\n  // deactive 'add' button in Results list for that title\n  const addNomination = (movieObj) => {\n    if (nominations.length !== 5) {\n      movieObj.nominated = true;\n      setNominations([...nominations, movieObj]);\n    }\n  };\n\n  // onClick event, passed to Nominations\n  // receives nomination object\n  // removes nomination from state\n  // IF same title is displayed in Results, reactivate the 'add' button\n  const removeNomination = (movieObj) => {\n    movieObj.nominated = false;\n    const index = searchResults.findIndex(\n      (movie) => movie.title === movieObj.title\n    );\n    if (index !== -1) {\n      searchResults[index].nominated = false;\n    }\n    let updatedNominations = nominations.filter(\n      (nom) => nom.title !== movieObj.title\n    );\n    if (updatedNominations.length === 0) {\n      updatedNominations = [];\n    }\n    setSearchResults(searchResults);\n    setNominations(updatedNominations);\n    localStorage.setItem(\"nominations\", JSON.stringify(updatedNominations));\n  };\n\n  return (\n    <>\n      <Header />\n      <main className=\"app\">\n        <Banner\n          finished={finished}\n          nominations={nominations}\n          randomMovie={randomMovie}\n        />\n        <SearchBar debouncer={debouncer} loading={loading} />\n        <Results\n          searchTerm={searchTerm}\n          searchResults={searchResults}\n          addNomination={addNomination}\n          noResults={searchTerm && searchResults.length === 0}\n          disabled={nominations.length >= 5}\n        />\n        <Nominations\n          nominations={nominations}\n          removeNomination={removeNomination}\n          nomCount={5 - nominations.length}\n        />\n        <ScrollToTopButton scrollToTop={scrollToTop} />\n      </main>\n      <Footer />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}